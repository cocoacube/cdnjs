{"version":3,"sources":["webpack://hytronButton/webpack/universalModuleDefinition","webpack://hytronButton/webpack/bootstrap","webpack://hytronButton/./node_modules/uuid/lib/rng-browser.js","webpack://hytronButton/./node_modules/uuid/lib/bytesToUuid.js","webpack://hytronButton/./button/index.ts","webpack://hytronButton/./node_modules/hytronplugins/ast.ts","webpack://hytronButton/./node_modules/hytronplugins/util.ts","webpack://hytronButton/./node_modules/buffer/index.js","webpack://hytronButton/(webpack)/buildin/global.js","webpack://hytronButton/./node_modules/base64-js/index.js","webpack://hytronButton/./node_modules/ieee754/index.js","webpack://hytronButton/./node_modules/isarray/index.js","webpack://hytronButton/./node_modules/uuid/index.js","webpack://hytronButton/./node_modules/uuid/v1.js","webpack://hytronButton/./node_modules/uuid/v4.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rnds","Array","Math","random","byteToHex","toString","substr","buf","offset","bth","join","ast_1","util_1","default","[object Object]","renderer","node","text","style","visit","disabledStr","this","makeDisableProp","size","type","__id","__type","event","uuid","__kind","SyntaxKind","WidgetEvent","disabled","ModuleType","ObserverKind","HttpMethod","HttpParameterType","ViewModelInitType","uuid_1","chars","uuidStr","v4","replace","Buffer","alloc","str","substring","Number","parseInt","write","global","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","isnan","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","g","Function","eval","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","tripletToBase64","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","v1","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","clockseq","seedBytes","msecs","Date","getTime","nsecs","dt","tl","tmh","ii"],"mappings":"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","file":"hytron-button.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hytronButton\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hytronButton\"] = factory();\n\telse\n\t\troot[\"hytronButton\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// import WidgetRenderer from '@/widgets/widgetRenderer';\n// import { IRenderer } from '../core/types';\nimport Button from '../button/definition';\n// import { SyntaxKind, WidgetEventNode } from '../core/ast';\n// import { uuid } from '@/core';\nimport {SyntaxKind, WidgetEventNode} from 'hytronplugins/ast';\nimport { uuid } from 'hytronplugins/util';\n//import Button from '../button/definition';\n// import { SyntaxKind, WidgetEventNode, uuid } from '@hytron/plugin';\n\nexport default class ButtonRenderer {\n    public render(renderer: any, node: Button): string {\n        const text = node.text ? node.text : '';\n        let style = renderer.visit(node.style);\n        let disabledStr = this.makeDisableProp(node);\n        const ret = `<van-button size=\"${node.size}\" type=\"${node.type}\" widgetid=\"${node.__id}\" ${disabledStr} ${style}>${node.text}</van-button>`;\n        return ret;\n    }\n\n    public createDefaultNode(): Button {\n        let node: Button = {} as any;\n        node.__type = 'Button';\n        node.type = 'default';\n        node.text = 'button';\n        node.event = {\n            __id: uuid(),\n            __kind: SyntaxKind.WidgetEvent\n        } as WidgetEventNode;\n        return node;\n    }\n\n    public getName(): string {\n        return 'Button';\n    }\n\n    private makeDisableProp(node: Button): string {\n        return node.disabled ? 'disabled' : '';\n    }\n}\n","export enum SyntaxKind {\n    Imports,\n    ImportNode,\n    SourceFile,\n    Property,\n    TypeReference,\n    IntKeyword,\n    StringKeyword,\n    BooleanKeyword,\n    LongKeyword,\n    FloatKeyword,\n    DoubleKeyword,\n    ValueNode,\n    DataPipeline,\n    DataObserver,\n    DataSubscriber,\n    FunctionExpression,\n    HttpAction,\n    Parameter,\n    OperatorMethod,\n    OperatorCallee,\n    ViewModelBinding,\n    ViewControllerEvent,\n    WidgetNode,\n    WidgetProperty,\n    WidgetEvent,\n    WidgetStyle,\n    PageTabbar,\n    PageTabbarItem,\n    DataBindingExpression\n}\n\nexport interface ASTNode {\n    __id: string;\n    __comment?: string; // 用于存放注释\n    __kind: SyntaxKind;\n}\n\nexport enum ModuleType {\n    Unknown = 'Unknown',\n    Model = 'Model',\n    Operator = 'Operator',\n    ViewModel = 'ViewModel',\n    ViewController = 'ViewController',\n    Page = 'Page',\n    Widget = 'Widget'\n}\n\n\nexport interface WidgetNode extends ASTNode {\n    __kind: SyntaxKind.WidgetNode;\n    __type: string;\n    id?: string;\n    event?: WidgetEventNode;\n    style?: WidgetStyleNode;\n}\n\nexport interface WidgetEventNode extends ASTNode {\n    __kind: SyntaxKind.WidgetEvent;\n}\n\nexport interface WidgetStyleNode extends ASTNode, Style {\n    __kind: SyntaxKind.WidgetStyle;\n}\n\nexport type FlexAlignType = 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n\nexport interface FlexStyle {\n    alignContent?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'space-between' | 'space-around';\n    alignItems?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n    alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n    aspectRatio?: number;\n    borderBottomWidth?: string;\n    borderLeftWidth?: string;\n    borderRightWidth?: string;\n    borderTopWidth?: string;\n    borderWidth?: string;\n    bottom?: number | string;\n    flex?: number;\n    flexBasis?: number | string;\n    flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n    flexGrow?: number;\n    flexShrink?: number;\n    flexWrap?: 'wrap' | 'nowrap';\n    height?: number | string;\n    justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around';\n    left?: number | string;\n    margin?: number | string;\n    marginBottom?: number | string;\n    marginHorizontal?: number | string;\n    marginLeft?: number | string;\n    marginRight?: number | string;\n    marginTop?: number | string;\n    marginVertical?: number | string;\n    maxHeight?: number | string;\n    maxWidth?: number | string;\n    minHeight?: number | string;\n    minWidth?: number | string;\n    overflow?: 'visible' | 'hidden' | 'scroll';\n    padding?: number | string;\n    paddingBottom?: number | string;\n    paddingHorizontal?: number | string;\n    paddingLeft?: number | string;\n    paddingRight?: number | string;\n    paddingTop?: number | string;\n    paddingVertical?: number | string;\n    position?: 'absolute' | 'relative';\n    right?: number | string;\n    top?: number | string;\n    width?: number | string;\n    zIndex?: number;\n\n    // /**\n    //  * @platform ios\n    //  */\n    // direction?: 'inherit' | 'ltr' | 'rtl'\n}\n\nexport interface TextStyleIOS extends ViewStyle {\n    letterSpacing?: number;\n    textDecorationColor?: string;\n    textDecorationStyle?: 'solid' | 'double' | 'dotted' | 'dashed';\n    writingDirection?: 'auto' | 'ltr' | 'rtl';\n}\n\nexport interface TextStyleAndroid extends ViewStyle {\n    textAlignVertical?: 'auto' | 'top' | 'bottom' | 'center';\n    includeFontPadding?: boolean;\n}\n\nexport interface TextStyle extends TextStyleIOS, TextStyleAndroid, ViewStyle {\n    color?: string;\n    fontFamily?: string;\n    fontSize?: string;\n    fontStyle?: 'normal' | 'italic';\n    /**\n     * Specifies font weight. The values 'normal' and 'bold' are supported\n     * for most fonts. Not all fonts have a variant for each of the numeric\n     * values, in that case the closest one is chosen.\n     */\n    fontWeight?: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n    letterSpacing?: number;\n    lineHeight?: number;\n    /**\n     * Specifies text alignment.\n     * The value 'justify' is only supported on iOS.\n     */\n    textAlign?: 'auto' | 'left' | 'right' | 'center';\n    textDecorationLine?: 'none' | 'underline' | 'line-through' | 'underline line-through';\n    textDecorationStyle?: 'solid' | 'double' | 'dotted' | 'dashed';\n    textDecorationColor?: string;\n    textShadowColor?: string;\n    textShadowOffset?: { width: number; height: number };\n    textShadowRadius?: number;\n    testID?: string;\n}\n\nexport interface PerpectiveTransform {\n    perspective: number;\n}\n\nexport interface RotateTransform {\n    rotate: string;\n}\n\nexport interface RotateXTransform {\n    rotateX: string;\n}\n\nexport interface RotateYTransform {\n    rotateY: string;\n}\n\nexport interface RotateZTransform {\n    rotateZ: string;\n}\n\nexport interface ScaleTransform {\n    scale: string;\n}\n\nexport interface ScaleXTransform {\n    scaleX: string;\n}\n\nexport interface ScaleYTransform {\n    scaleY: string;\n}\n\nexport interface TranslateXTransform {\n    translateX: string;\n}\n\nexport interface TranslateYTransform {\n    translateY: string;\n}\n\nexport interface SkewXTransform {\n    skewX: string;\n}\n\nexport interface SkewYTransform {\n    skewY: string;\n}\n\nexport interface TransformsStyle {\n    transform?: (\n        | PerpectiveTransform\n        | RotateTransform\n        | RotateXTransform\n        | RotateYTransform\n        | RotateZTransform\n        | ScaleTransform\n        | ScaleXTransform\n        | ScaleYTransform\n        | TranslateXTransform\n        | TranslateYTransform\n        | SkewXTransform\n        | SkewYTransform)[];\n    transformMatrix?: Array<number>;\n    rotation?: string;\n    scaleX?: string;\n    scaleY?: string;\n    translateX?: string;\n    translateY?: string;\n}\n\nexport interface ViewStyle extends FlexStyle, TransformsStyle {\n    backfaceVisibility?: 'visible' | 'hidden';\n    backgroundColor?: string;\n    borderBottomColor?: string;\n    borderBottomLeftRadius?: string;\n    borderBottomRightRadius?: string;\n    borderBottomWidth?: string;\n    borderColor?: string;\n    borderLeftColor?: string;\n    borderLeftWidth?: string;\n    borderRadius?: string;\n    borderRightColor?: string;\n    borderRightWidth?: string;\n    borderStyle?: 'solid' | 'dotted' | 'dashed';\n    borderTopColor?: string;\n    borderTopLeftRadius?: string;\n    borderTopRightRadius?: string;\n    borderTopWidth?: string;\n    display?: 'none' | 'flex';\n    opacity?: string;\n    overflow?: 'visible' | 'hidden' | 'scroll';\n    shadowColor?: string;\n    shadowOffset?: { width: string; height: string };\n    shadowOpacity?: string;\n    shadowRadius?: string;\n    elevation?: string;\n    testID?: string;\n}\n\nexport interface ShadowStyleIOS {\n    shadowColor?: string;\n    shadowOffset?: { width: string; height: string };\n    shadowOpacity?: string;\n    shadowRadius?: string;\n}\n\nexport type ImageResizeMode = 'contain' | 'cover' | 'stretch' | 'center' | 'repeat';\n\nexport interface ImageStyle extends FlexStyle, TransformsStyle, ShadowStyleIOS {\n    resizeMode?: ImageResizeMode;\n    backfaceVisibility?: 'visible' | 'hidden';\n    borderBottomLeftRadius?: string;\n    borderBottomRightRadius?: string;\n    backgroundColor?: string;\n    borderColor?: string;\n    borderWidth?: string;\n    borderRadius?: string;\n    borderTopLeftRadius?: string;\n    borderTopRightRadius?: string;\n    overflow?: 'visible' | 'hidden' | 'scroll';\n    overlayColor?: string;\n    tintColor?: string;\n    opacity?: string;\n}\n\nexport interface Style extends ViewStyle, TextStyle, ImageStyle {}\n\n\n// prettier-ignore\nexport enum ObserverKind {\n    map     = 'map',\n    filter  = 'filter',\n    success = 'success',\n    error   = 'error'\n}\n\n// prettier-ignore\nexport enum HttpMethod {\n    UNKNOWN = 'UNKNOWN',\n    GET     = 'GET',\n    POST    = 'POST',\n    DELETE  = 'DELETE',\n    PUT     = 'PUT'\n}\n\n// prettier-ignore\nexport enum HttpParameterType {\n    Unknown         = 'Unknown',\n    Header          = 'Header',\n    Path            = 'Path',\n    Query           = 'Query',\n    JSON            = 'JSON',\n    FormUrlEncoded  = 'FormUrlEncoded'\n}\n\n// prettier-ignore\nexport enum ViewModelInitType {\n    Create  = 'Create',\n    Get     = 'Get',\n    Outer   = 'Outer'\n}\n\nexport interface ASTNode {\n    __id: string;\n    __comment?: string; // 用于存放注释\n    __kind: SyntaxKind;\n}\n\n// prettier-ignore\nexport interface ArrayNode<T> extends Array<T>, ASTNode { }\n\n// prettier-ignore\nexport interface TypeNode extends ASTNode { }\n\nexport interface Imports extends ASTNode {\n    __kind: SyntaxKind.Imports;\n    list: ImportNode[];\n}\n\nexport interface ImportNode extends ASTNode {\n    __kind: SyntaxKind.ImportNode;\n    paths: string[];\n}\n\nexport interface SourceFile extends ASTNode {\n    __kind: SyntaxKind.SourceFile;\n    moduleType: ModuleType;\n    import?: Imports;\n    name: string;\n    fileName: string;\n    // diagnostics?: Diagnostic[];\n}\n\nexport interface Model extends SourceFile {\n    moduleType: ModuleType.Model;\n    properties: Property[];\n}\n\nexport interface Property extends ASTNode {\n    __kind: SyntaxKind.Property;\n    name: string;\n    type: TypeNode;\n    defaultValue?: ValueNode;\n    serializedName?: string;\n}\n\nexport interface Operator extends SourceFile {\n    moduleType: ModuleType.Operator;\n    actions: Array<HttpAction>;\n}\n\nexport interface HttpAction extends ASTNode {\n    __kind: SyntaxKind.HttpAction;\n    name: string;\n    url: string;\n    method: HttpMethod;\n    parameters?: Array<Parameter>;\n    responseType: TypeNode;\n    responseConverter?: DataObserver[];\n}\n\nexport interface Parameter extends ASTNode {\n    __kind: SyntaxKind.Parameter;\n    name: string;\n    type: TypeNode;\n    canBeNull?: boolean;\n    httpParamType: HttpParameterType;\n    serializedName?: string;\n}\n\nexport interface DataPipeline extends ASTNode {\n    __kind: SyntaxKind.DataPipeline;\n    observers?: DataObserver[];\n    subscriber: DataSubscriber;\n}\n\nexport interface DataObserver extends ASTNode {\n    __kind: SyntaxKind.DataObserver;\n    type: ObserverKind;\n    argName: string;\n    returnType: TypeNode;\n    onAction: FunctionExpression;\n}\n\nexport interface DataSubscriber extends ASTNode {\n    __kind: SyntaxKind.DataSubscriber;\n    argName: string;\n    onSuccess: FunctionExpression;\n    onError?: FunctionExpression;\n}\n\n// todo: value 到底怎么存储，要不要把 value 的 type 记录在 node 上 ？\nexport interface ValueNode extends ASTNode {\n    __kind: SyntaxKind.ValueNode;\n    value: any;\n}\n\nexport interface TypeReferenceNode extends TypeNode {\n    __kind: SyntaxKind.TypeReference;\n    typeName: string;\n    typeArguments?: TypeNode[];\n}\n\nexport interface KeywordTypeNode extends TypeNode {\n    __kind:\n        | SyntaxKind.IntKeyword\n        | SyntaxKind.StringKeyword\n        | SyntaxKind.BooleanKeyword\n        | SyntaxKind.LongKeyword\n        | SyntaxKind.DoubleKeyword\n        | SyntaxKind.FloatKeyword;\n}\n\n/**\n * todo： 有待思考\n * 这里的 function 代码怎么存储？ 用什么编译器来得到 真正的 js ast  ？\n */\nexport interface FunctionExpression extends ASTNode {\n    __kind: SyntaxKind.FunctionExpression;\n    expression: __ArrowFunctionExpression;\n    raw: string;\n}\n\nexport interface ViewModel extends SourceFile {\n    moduleType: ModuleType.ViewModel;\n    properties: Property[];\n    methods: OperatorMethod[];\n}\n\nexport interface Method extends ASTNode {\n    name: string;\n}\n\nexport interface OperatorMethod extends Method {\n    __kind: SyntaxKind.OperatorMethod;\n    callee: OperatorCallee;\n    arguments: { key: string; value: string }[];\n    response: DataPipeline;\n}\n\nexport interface OperatorCallee extends ASTNode {\n    __kind: SyntaxKind.OperatorCallee;\n    name: string;\n    action: string;\n}\n\nexport interface ViewController extends SourceFile {\n    moduleType: ModuleType.ViewController;\n    viewModels: ViewModelBinding[];\n    event?: ViewControllerEvent;\n    //observers?: Observers;\n    content: WidgetNode;\n}\n\nexport interface ViewModelBinding extends ASTNode {\n    __kind: SyntaxKind.ViewModelBinding;\n    type: string;\n    name: string;\n    initType?: ViewModelInitType;\n}\n\nexport interface ViewControllerEvent extends ASTNode {\n    __kind: SyntaxKind.ViewControllerEvent;\n    onCreated?: FunctionExpression;\n    onDestroyed?: FunctionExpression;\n}\n\n// internal interface\nexport interface __ArrowFunctionExpression {\n    readonly params: any[];\n    readonly body: any;\n}\n\nexport interface Page extends SourceFile {\n    moduleType: ModuleType.Page;\n    headerText: string;\n    content: string | PageTabbar;\n}\n\nexport interface PageTabbar extends ASTNode {\n    __kind: SyntaxKind.PageTabbar;\n    backgroundColor?: string;\n    textColor?: string;\n    textSelectedColor?: string;\n    items: PageTabbarItem[];\n}\n\nexport interface PageTabbarItem extends ASTNode {\n    __kind: SyntaxKind.PageTabbarItem;\n    text: string;\n    content: string;\n    icon?: string;\n    iconSelected?: string;\n}\n\nexport interface DataBindingExpression extends ASTNode {\n    __kind: SyntaxKind.DataBindingExpression;\n    expression: any;\n    raw: string;\n}\n","import { v4 as uuidv4 } from 'uuid';\n// import { TextFile } from '@/core/types';\n// import { HError, ErrorCode } from '@/core/error';\n// import { ModuleType, Page, createPage } from '@hytron/compiler-web';\n// import { SyntaxKind } from '@/core/ast';\n\n// prettier-ignore\nconst chars = [\n    'a', 'b', 'c', 'd', 'e', 'f',\n    'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\n    't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5',\n    '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',\n    'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',\n    'W', 'X', 'Y', 'Z'\n];\n\n// /**\n//  * 将 32 位的 UUID 转化成 8 位的短码\n//  *\n//  * @export\n//  * @returns {string}\n//  */\nexport function uuid(): string {\n    const uuidStr = uuidv4().replace(/-/g, '');\n    const buf = Buffer.alloc(8);\n    for (let i = 0; i < 8; i++) {\n        const str: string = uuidStr.substring(i * 4, i * 4 + 4);\n        const n: number = Number.parseInt(str, 16);\n        buf.write(chars[n % 0x3e], i);\n    }\n    return buf.toString();\n}\n\n// export function getFilePath(moduleType: ModuleType, name: string): string {\n//     return `/${moduleType.toLowerCase()}/${name.trim()}.json`;\n// }\n\n// export function createNewModelFile(filePath: string, name: string): TextFile {\n//     const json = {\n//         __id: uuid(),\n//         moduleType: 'Model',\n//         name,\n//         properties: []\n//     };\n\n//     return {\n//         path: filePath,\n//         content: JSON.stringify(json)\n//     } as TextFile;\n// }\n\n// export function getNewFilePath(oldFilePath: string, newFileName: string): string {\n//     //Todo: check file name valid;\n\n//     const reg = /(.*\\/)(.*\\.json)/g;\n//     if (reg.test(oldFilePath)) {\n//         return `${RegExp.$1}${newFileName}.json`;\n//     } else {\n//         throw new HError(ErrorCode.IllegalArgument, 'file path illegal: ' + oldFilePath);\n//     }\n// }\n\n// export function validateName(name: string): boolean {\n//     const reg = /^[a-zA-Z$_][a-zA-Z$_\\d]*$/;\n//     return reg.test(name);\n// }\n\n// export function createNewOperatorFile(filePath: string, name: string): TextFile {\n//     const json = {\n//         __id: uuid(),\n//         moduleType: 'Operator',\n//         name,\n//         actions: []\n//     };\n\n//     return {\n//         path: filePath,\n//         content: JSON.stringify(json)\n//     } as TextFile;\n// }\n\n// export function createNewViewModelFile(filePath: string, name: string): TextFile {\n//     const json = {\n//         __id: uuid(),\n//         moduleType: 'ViewModel',\n//         name,\n//         properties: [],\n//         methods: []\n//     };\n\n//     return {\n//         path: filePath,\n//         content: JSON.stringify(json)\n//     } as TextFile;\n// }\n\n// export function createNewViewControllerFile(filePath: string, name: string): TextFile {\n//     const vmName = name + 'ViewModel';\n//     const json = {\n//         __id: uuid(),\n//         moduleType: 'ViewController',\n//         viewModels: [\n//             {\n//                 __id: uuid(),\n//                 type: vmName,\n//                 name: 'vm'\n//             }\n//         ],\n//         name,\n//         event: {\n//             __id: uuid()\n//         },\n//         content: {\n//             __id: uuid(),\n//             __type: 'ScrollView',\n//             id: 'rootView',\n//             event: {\n//                 __id: uuid(),\n//                 __kind: SyntaxKind.WidgetEvent\n//             },\n//             style: {\n//                 __id: uuid(),\n//                 __kind: SyntaxKind.WidgetStyle,\n//                 overflow: 'scroll',\n//                 width: '100%',\n//                 height: '100%'\n//             },\n//             children: []\n//         }\n//     };\n\n//     return {\n//         path: filePath,\n//         content: JSON.stringify(json)\n//     } as TextFile;\n// }\n\n// export function createNewPageFile(filePath: string, name: string): TextFile {\n//     let page: Page = createPage(name, 'Title', '');\n//     let content = JSON.stringify(page);\n//     return {\n//         path: filePath,\n//         content\n//     } as TextFile;\n// }\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n"],"sourceRoot":""}